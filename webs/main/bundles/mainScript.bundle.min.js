/* SCRIPT js */
function isJsonString(n){try{JSON.parse(n)}catch(n){return!1}return!0}$(document).ready(function(){socketInit(),colorInit(),animsInit()});var prevScrollpos=window.pageYOffset;window.onscroll=function(){var n=window.pageYOffset;prevScrollpos>n?$(".floating-container").fadeIn(200):$(".floating-container").fadeOut(200),prevScrollpos=n};
/* SCRIPT js */

/* color picker js */
function colorInit(){makePicker()}var RGB_Strip;function makePicker(){(RGB_Strip=new iro.ColorPicker(".colorPicker",{color:"rgb(255, 0, 0)",borderWidth:1,borderColor:"#fff",id:"MainPicker",layout:[{component:iro.ui.Box},{component:iro.ui.Slider,options:{id:"hue-slider",sliderType:"hue"}},{component:iro.ui.Slider,options:{id:"saturation-slider",sliderType:"saturation"}},{component:iro.ui.Slider,options:{id:"value-slider",sliderType:"value"}},{component:iro.ui.Slider,options:{id:"kelvin-slider",sliderType:"kelvin"}}]})).on("input:move",getColorFromEvent),RGB_Strip.on("input:end",getColorFromEvent)}function getColorFromEvent(){$(".checkbox-input").prop("checked",!1),sendPacket({type:"rgb",r:RGB_Strip.color.rgb.r,g:RGB_Strip.color.rgb.g,b:RGB_Strip.color.rgb.b})}
/* color picker js */

/* websocket js */
var socket,socketIsConnected=!1,socketConnectionCount=0,socketIsConnecting=!1;function socketInit(){connectWebsocket(),checkSocketConnection()}function checkSocketConnection(){setInterval(()=>{socketIsConnected||(socketConnectionCount<3?(socketConnectionCount++,connectWebsocket()):socketConnectionCount>=3&&!socketIsConnected&&!socketIsConnecting&&setTimeout(()=>{socketConnectionCount=0},1e4))},1e3)}function connectWebsocket(){socket=new WebSocket("ws://"+window.location.hostname+"/moodLamp"),socketIsConnecting=!0,socket.onopen=function(n){socketIsConnected=!0,socketIsConnecting=!1,$(".connectionIndicator").addClass("connected")},socket.onclose=function(n){socketIsConnected=!1,socketIsConnecting=!1,$(".connectionIndicator").removeClass("connected")},socket.onmessage=function(n){processSocketData(n.data)}}function processSocketData(n){let o={type:"Not json",content:n};switch(isJsonString(n)&&(o=JSON.parse(n)),o.type){case"message":console.log(o.content);break;default:console.log("Unknown packet type: "+o.type,"content: ",o.content)}}function sendPacket(n){if(socketIsConnected){let o=JSON.stringify(n);socket.send(o)}else console.log("Socket is not connected")}
/* websocket js */

/* anims js */
function animsInit(){animSelect()}function animSelect(){$(".checkbox-input").on("click",function(e){e.preventDefault(),$(".checkbox-input").prop("checked",!1),setTimeout(()=>{let e=$(this).attr("animMode");$(this).prop("checked")?(e=0,$(this).prop("checked",!1)):$(this).prop("checked",!0),setAnimation(e)},10)})}function setAnimation(e){sendPacket({type:"anim",mode:e})}
/* anims js */
