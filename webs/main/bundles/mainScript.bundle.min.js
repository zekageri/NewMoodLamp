/* SCRIPT js */
$(document).ready(function(){socketInit(),colorInit(),animsInit(),initNav(),countDownInit()});var userProgSaver,userProgram={};function saveUserProg(){clearTimeout(userProgSaver),userProgSaver=setTimeout(()=>{sendPacket({type:"saveUserProg",prog:JSON.stringify(userProgram)})},1e3)}function uniqueId(){var e=(Math.floor(25*Math.random())+10).toString(36)+"_";e+=(new Date).getTime().toString(36)+"_";do{e+=Math.floor(35*Math.random()).toString(36)}while(e.length<32);return e}function initNav(){$(".float-element").on("click",function(){let e=$(".activePage").attr("href"),t=$(this).attr("href");t!=e&&($(".page").hide(),$(t).fadeIn(200),$(".activePage").removeClass("activePage"),$(this).addClass("activePage"))})}function isJsonString(e){try{JSON.parse(e)}catch(e){return!1}return!0}var prevScrollpos=window.pageYOffset;window.onscroll=function(){var e=window.pageYOffset;prevScrollpos>e?$(".floating-container").fadeIn(200):$(".floating-container").fadeOut(200),prevScrollpos=e};
/* SCRIPT js */

/* color picker js */
function colorInit(){makePicker(),setSavedColor(),colorToolOpenEvent(),saveCurrentColorEvent(),deleteCurrentColorEvent()}var RGB_Strip,selectedSavedColorID;function makePicker(){(RGB_Strip=new iro.ColorPicker(".colorPicker",{color:"rgb(255, 0, 0)",borderWidth:1,borderColor:"#fff",id:"MainPicker",layout:[{component:iro.ui.Box},{component:iro.ui.Slider,options:{id:"hue-slider",sliderType:"hue"}},{component:iro.ui.Slider,options:{id:"saturation-slider",sliderType:"saturation"}},{component:iro.ui.Slider,options:{id:"value-slider",sliderType:"value"}},{component:iro.ui.Slider,options:{id:"kelvin-slider",sliderType:"kelvin"}}]})).on("input:move",getColorFromEvent),RGB_Strip.on("input:end",getColorFromEvent)}function colorToolOpenEvent(){$(".colorToolOpenBtn").on("click",function(){$(".colorTools").hasClass("active")?($(".colorTools").removeClass("active"),$(".colorToolOpenBtn i").addClass("open"),$(".toolBtns").hide(),setTimeout(()=>{$(".colorToolOpenBtn i").removeClass("open")},500)):($(".colorTools").addClass("active"),$(".colorToolOpenBtn i").removeClass("open"),setTimeout(()=>{$(".toolBtns").fadeIn(200),$(".colorToolOpenBtn i").addClass("open")},500))})}function deleteCurrentColorEvent(){$(".colorToolBtn.delete").on("click",function(){if(selectedSavedColorID){for(const o of userProgram.savedColors)if(o.id==selectedSavedColorID){userProgram.savedColors.splice(userProgram.savedColors.indexOf(o),1),addSavedColors(),saveUserProg(),console.log("Szín kitörölve!");break}}else console.warn("Válassz egy színt a törléshez!")})}function saveCurrentColorEvent(){$(".colorToolBtn.copy").on("click",function(){"savedColors"in userProgram||(userProgram.savedColors=[]),userProgram.savedColors.length>=20?console.warn("Nem tudok több színt eltárolni. :("):(userProgram.savedColors.push({color:RGB_Strip.color.hexString,id:uniqueId()}),addSavedColors(),saveUserProg())})}function addSavedColors(){if("savedColors"in userProgram){$(".colorOptions").empty();for(const o of userProgram.savedColors)$(".colorOptions").append(`<div id="${o.id}" class="savedColor" style="background-color:${o.color}"></div>`);setSavedColor()}}function setSavedColor(){$(".savedColor").off("click").on("click",function(){$(".savedColor").removeClass("activeColor"),$(this).addClass("activeColor");let o=$(this).css("background-color").match(/\d+/g);RGB_Strip.color.rgb={r:o[0],g:o[1],b:o[2]},getColorFromEvent(),selectedSavedColorID=$(this).attr("id")})}function getColorFromEvent(){$(".checkbox-input").prop("checked",!1),sendPacket({type:"rgb",r:RGB_Strip.color.rgb.r,g:RGB_Strip.color.rgb.g,b:RGB_Strip.color.rgb.b})}
/* color picker js */

/* websocket js */
var socket,socketIsConnected=!1,socketConnectionCount=0,socketIsConnecting=!1;function socketInit(){connectWebsocket(),checkSocketConnection()}function checkSocketConnection(){setInterval(()=>{socketIsConnected||(socketConnectionCount<3?(socketConnectionCount++,connectWebsocket()):socketConnectionCount>=3&&!socketIsConnected&&!socketIsConnecting&&setTimeout(()=>{socketConnectionCount=0},1e4))},1e3)}function connectWebsocket(){socket=new WebSocket("ws://"+window.location.hostname+"/moodLamp"),socketIsConnecting=!0,socket.onopen=function(o){socketIsConnected=!0,socketIsConnecting=!1,$(".connectionIndicator").addClass("connected")},socket.onclose=function(o){socketIsConnected=!1,socketIsConnecting=!1,$(".connectionIndicator").removeClass("connected")},socket.onmessage=function(o){processSocketData(o.data)}}function processSocketData(o){let e={type:"Not json",msg:o};switch(isJsonString(o)&&(e=JSON.parse(o)),e.type){case"firmware":processNewFirmware(e.msg);break;case"userProg":processUserProgram(e.msg);break;case"progInfo":processProgramInfo(e.msg);break;default:console.log("Unknown packet type: "+e.type,"msg: ",e.content)}}function processProgramInfo(o){"saved"==o?console.log("Program saved"):console.log("Program not saved")}function processUserProgram(o){console.log("User program: ",o),isJsonString(o)?(userProgram=JSON.parse(o),addSavedColors()):console.warn("Nem tudtam betölteni a felhasználói programot. :(")}function sendPacket(o){if(socketIsConnected){let e=JSON.stringify(o);socket.send(e)}else console.log("Socket is not connected")}
/* websocket js */

/* anims js */
function animsInit(){animSelect()}function animSelect(){$(".checkbox-input").on("click",function(e){e.preventDefault(),$(".checkbox-input").prop("checked",!1),setTimeout(()=>{let e=$(this).attr("animMode");$(this).prop("checked")?(e=0,$(this).prop("checked",!1)):$(this).prop("checked",!0),setAnimation(e)},10)})}function setAnimation(e){sendPacket({type:"anim",mode:e})}
/* anims js */

/* new firmware js */
var lastFirmwareMessageMS=0;function processNewFirmware(e){var a=JSON.parse(e);let r=Date.now();lastFirmwareMessageMS-r>=1e4&&(lastFirmwareMessageMS=Date.now(),console.log("firmwareInfo: ",a))}
/* new firmware js */

/* countDown js */
var countDownDate=new Date("Sep 25, 2025 15:00:00").getTime();function countDownInit(){setCountDownTime(46e5),countdownTimeStart()}function setCountDownTime(e){countDownDate=(new Date).getTime()+1e3*e}function countdownTimeStart(){var e=setInterval(function(){var t=(new Date).getTime(),n=countDownDate-t,o=Math.floor(n%864e5/36e5),i=Math.floor(n%36e5/6e4),a=Math.floor(n%6e4/1e3);o<10&&(o="0"+o),i<10&&(i="0"+i),a<10&&(a="0"+a),$("#hourTimer").text(o),$("#minTimer").text(i),$("#secTimer").text(a),n<0&&(clearInterval(e),console.log("Timer hit!"))},1e3)}
/* countDown js */

/* timepicker js */

/* timepicker js */
